{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\reactjs\\\\src\\\\components\\\\Calendar.jsx\";\nimport React from 'react';\nimport DayCell from './DayCell';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = ({\n  currentDate,\n  events,\n  onDayClick,\n  updateEvent\n}) => {\n  const daysInMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate();\n  const firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1).getDay();\n  const renderDays = () => {\n    const days = [];\n    for (let i = 0; i < firstDayOfMonth; i++) {\n      days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-cell empty\"\n      }, `empty-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this));\n    }\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push(/*#__PURE__*/_jsxDEV(DayCell, {\n        day: day,\n        events: events.filter(event => new Date(event.date).getDate() === day),\n        onClick: () => onDayClick(day)\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this));\n    }\n    return days;\n  };\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const sourceDay = source.droppableId;\n    const destDay = destination.droppableId;\n    const eventId = result.draggableId;\n\n    // Check for conflicts\n    const event = events.find(e => e.id === eventId);\n    const newStart = new Date(destDay);\n    newStart.setHours(event.start.getHours(), event.start.getMinutes());\n    const newEnd = new Date(destDay);\n    newEnd.setHours(event.end.getHours(), event.end.getMinutes());\n    const hasConflict = events.some(e => {\n      if (e.id === eventId) return false;\n      return newStart < e.end && newEnd > e.start;\n    });\n    if (hasConflict) {\n      alert('Event conflict detected!');\n      return;\n    }\n\n    // Update event\n    const updatedEvent = {\n      ...event,\n      start: newStart,\n      end: newEnd\n    };\n    updateEvent(eventId, updatedEvent);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"calendar\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          className: \"calendar-grid\",\n          children: [renderDays(), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","DayCell","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Calendar","currentDate","events","onDayClick","updateEvent","daysInMonth","Date","getFullYear","getMonth","getDate","firstDayOfMonth","getDay","renderDays","days","i","push","className","fileName","_jsxFileName","lineNumber","columnNumber","day","filter","event","date","onClick","onDragEnd","result","source","destination","sourceDay","droppableId","destDay","eventId","draggableId","find","e","id","newStart","setHours","start","getHours","getMinutes","newEnd","end","hasConflict","some","alert","updatedEvent","children","provided","ref","innerRef","droppableProps","placeholder","_c","$RefreshReg$"],"sources":["D:/react/reactjs/src/components/Calendar.jsx"],"sourcesContent":["import React from 'react';\r\nimport DayCell from './DayCell';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nconst Calendar = ({ currentDate, events, onDayClick, updateEvent }) => {\r\n  const daysInMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate();\r\n  const firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1).getDay();\r\n\r\n  const renderDays = () => {\r\n    const days = [];\r\n    for (let i = 0; i < firstDayOfMonth; i++) {\r\n      days.push(<div key={`empty-${i}`} className=\"day-cell empty\"></div>);\r\n    }\r\n    for (let day = 1; day <= daysInMonth; day++) {\r\n      days.push(\r\n        <DayCell\r\n          key={day}\r\n          day={day}\r\n          events={events.filter(event => new Date(event.date).getDate() === day)}\r\n          onClick={() => onDayClick(day)}\r\n        />\r\n      );\r\n    }\r\n    return days;\r\n  };\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    const sourceDay = source.droppableId;\r\n    const destDay = destination.droppableId;\r\n    const eventId = result.draggableId;\r\n\r\n    // Check for conflicts\r\n    const event = events.find(e => e.id === eventId);\r\n    const newStart = new Date(destDay);\r\n    newStart.setHours(event.start.getHours(), event.start.getMinutes());\r\n    const newEnd = new Date(destDay);\r\n    newEnd.setHours(event.end.getHours(), event.end.getMinutes());\r\n\r\n    const hasConflict = events.some(e => {\r\n      if (e.id === eventId) return false;\r\n      return (newStart < e.end && newEnd > e.start);\r\n    });\r\n\r\n    if (hasConflict) {\r\n      alert('Event conflict detected!');\r\n      return;\r\n    }\r\n\r\n    // Update event\r\n    const updatedEvent = { ...event, start: newStart, end: newEnd };\r\n    updateEvent(eventId, updatedEvent);\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"calendar\">\r\n          {(provided) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n              className=\"calendar-grid\"\r\n            >\r\n              {renderDays()}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}