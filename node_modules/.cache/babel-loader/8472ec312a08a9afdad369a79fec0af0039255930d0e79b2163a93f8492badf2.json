{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\reactjs\\\\src\\\\components\\\\Calendar.jsx\";\nimport React from 'react';\nimport DayCell from './DayCell';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = ({\n  currentDate,\n  events,\n  onDayClick,\n  updateEvent\n}) => {\n  const daysInMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate();\n  const firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1).getDay();\n  const renderDays = () => {\n    const days = [];\n    for (let i = 0; i < firstDayOfMonth; i++) {\n      days.push(/*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: `empty-${i}`,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          className: \"day-cell empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this)\n      }, `empty-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this));\n    }\n    for (let day = 1; day <= daysInMonth; day++) {\n      const dayDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), day);\n      const dayString = dayDate.toISOString().split('T')[0];\n      days.push(/*#__PURE__*/_jsxDEV(DayCell, {\n        day: dayDate,\n        events: events.filter(event => event.date === dayString),\n        onClick: () => onDayClick(dayDate)\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this));\n    }\n    return days;\n  };\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    if (destination.droppableId.startsWith('empty-')) return;\n    const destDay = destination.droppableId;\n    const destDate = new Date(destDay);\n    if (destDate.getMonth() !== currentDate.getMonth() || destDate.getFullYear() !== currentDate.getFullYear()) {\n      return; // Ignore drops outside the current month\n    }\n    const sourceDay = source.droppableId;\n    const eventId = result.draggableId;\n\n    // Check for conflicts\n    const event = events.find(e => e.id === eventId);\n    const newStart = new Date(destDay);\n    newStart.setHours(event.start.getHours(), event.start.getMinutes());\n    const newEnd = new Date(destDay);\n    newEnd.setHours(event.end.getHours(), event.end.getMinutes());\n    const hasConflict = events.some(e => {\n      if (e.id === eventId) return false;\n      return newStart < e.end && newEnd > e.start;\n    });\n    if (hasConflict) {\n      alert('Event conflict detected!');\n      return;\n    }\n\n    // Update event\n    const updatedEvent = {\n      ...event,\n      start: newStart,\n      end: newEnd,\n      date: destDay\n    };\n    updateEvent(eventId, updatedEvent);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-grid\",\n        children: renderDays()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","DayCell","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Calendar","currentDate","events","onDayClick","updateEvent","daysInMonth","Date","getFullYear","getMonth","getDate","firstDayOfMonth","getDay","renderDays","days","i","push","droppableId","children","provided","ref","innerRef","droppableProps","className","fileName","_jsxFileName","lineNumber","columnNumber","day","dayDate","dayString","toISOString","split","filter","event","date","onClick","onDragEnd","result","source","destination","startsWith","destDay","destDate","sourceDay","eventId","draggableId","find","e","id","newStart","setHours","start","getHours","getMinutes","newEnd","end","hasConflict","some","alert","updatedEvent","_c","$RefreshReg$"],"sources":["D:/react/reactjs/src/components/Calendar.jsx"],"sourcesContent":["import React from 'react';\r\nimport DayCell from './DayCell';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nconst Calendar = ({ currentDate, events, onDayClick, updateEvent }) => {\r\n  const daysInMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate();\r\n  const firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1).getDay();\r\n\r\n  const renderDays = () => {\r\n    const days = [];\r\n    for (let i = 0; i < firstDayOfMonth; i++) {\r\n      days.push(\r\n        <Droppable droppableId={`empty-${i}`} key={`empty-${i}`}>\r\n          {(provided) => (\r\n            <div ref={provided.innerRef} {...provided.droppableProps} className=\"day-cell empty\"></div>\r\n          )}\r\n        </Droppable>\r\n      );\r\n    }\r\n    for (let day = 1; day <= daysInMonth; day++) {\r\n      const dayDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), day);\r\n      const dayString = dayDate.toISOString().split('T')[0];\r\n      days.push(\r\n        <DayCell\r\n          key={day}\r\n          day={dayDate}\r\n          events={events.filter(event => event.date === dayString)}\r\n          onClick={() => onDayClick(dayDate)}\r\n        />\r\n      );\r\n    }\r\n    return days;\r\n  };\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n    if (destination.droppableId.startsWith('empty-')) return;\r\n\r\n    const destDay = destination.droppableId;\r\n    const destDate = new Date(destDay);\r\n    if (\r\n      destDate.getMonth() !== currentDate.getMonth() ||\r\n      destDate.getFullYear() !== currentDate.getFullYear()\r\n    ) {\r\n      return; // Ignore drops outside the current month\r\n    }\r\n\r\n    const sourceDay = source.droppableId;\r\n    const eventId = result.draggableId;\r\n\r\n    // Check for conflicts\r\n    const event = events.find(e => e.id === eventId);\r\n    const newStart = new Date(destDay);\r\n    newStart.setHours(event.start.getHours(), event.start.getMinutes());\r\n    const newEnd = new Date(destDay);\r\n    newEnd.setHours(event.end.getHours(), event.end.getMinutes());\r\n\r\n    const hasConflict = events.some(e => {\r\n      if (e.id === eventId) return false;\r\n      return (newStart < e.end && newEnd > e.start);\r\n    });\r\n\r\n    if (hasConflict) {\r\n      alert('Event conflict detected!');\r\n      return;\r\n    }\r\n\r\n    // Update event\r\n    const updatedEvent = { ...event, start: newStart, end: newEnd, date: destDay };\r\n    updateEvent(eventId, updatedEvent);\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className=\"calendar-grid\">\r\n          {renderDays()}\r\n        </div>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}